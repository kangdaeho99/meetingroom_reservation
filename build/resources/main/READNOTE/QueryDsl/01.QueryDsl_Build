스프링 부트 3.0 + Querydsl 설정 관련
[https://www.inflearn.com/questions/779498/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-3-0-querydsl-%EC%84%A4%EC%A0%95-%EA%B4%80%EB%A0%A8]


계속해서 cannot find a class 로 나오면서 객체를 못찾는데 이떄 generated 설정을 builddir로ㅓ 하면안도고 아래의 글처럼해야할듯
[https://www.inflearn.com/chats/669477/querydsl-springboot-2-7%EC%9D%98-gradle-%EC%84%A4%EC%A0%95%EC%9D%84-%EA%B3%B5%EC%9C%A0%ED%95%A9%EB%8B%88%EB%8B%A4]


[스프링부트 3.0 이후 Querydsl 설정]
https://cafe.naver.com/gugucoding/7391

[[Error] Querydsl Cannot find symbol]
https://dev-coco.tistory.com/89




https://velog.io/@juhyeon1114/Spring-QueryDsl-gradle-%EC%84%A4%EC%A0%95-Spring-boot-3.0-%EC%9D%B4%EC%83%81



여기서 spring boot 3.0 과 연동할 수 있다.
그리고 글을 읽어보면 오류가 나던 부분을 해결한 코드가 있는데 그 아래의 코드를 끝까지 확인합니다.

해당 글 내용[
2023-03-06에 추가함
위에서 안내하고 있는 Gradle 설정은 Querydsl 플러그인을 사용하도록 되어 있는데, gradlew로 빌드할 때, 문제가 있어서 플러그인은 사용하면 안된다!!!
Spring을 로컬에서 실행, 빌드하는 건 되지만 배포를 위해 gradlew를 사용해서 빌드를 하면, 동일한 Q파일을 생성하지말라고 에러가 뜬다.
(이 문제를 해결을 하는데 한~~참 걸렸다. 😂)

검색을 해보면 거의 대부분, Querydsl플러그인을 사용해서 build.gradle을 작성하는 것을 많이들 알려주고 있는 것 같다... ㅠㅠ
다들 나처럼 고생을... 좀... 할 것 같다 😂

아무튼 위와 같이 build.gradle을 설정하면 안되고, 아래와 같이 설정해야한다. 꼭!꼭!꼭!

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // ⭐ Querydsl 플러그인 사용 X
}

group = 'sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵셥 ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}

]


