
스프링 부트 3 을 사용하면서 H2를 계속사용하려고하니
Syntax error in SQL statement "\000d\000a 계속해서 해당 오류가 나왔다.
다른 오류는 쉽게 해결했었는데 위와 같이 "\000d 같은 에러는 잘작동하지 않았다.
 [ https://blog.naver.com/tjdwns4537/222725200427] 이 글로 해결했다.
신기하게 h2에서 mysql을 사용하게하기 위해 MYSQLDialect를 사용하는것이 맞는줄알았는데 아래와 같이 H2Dialect로 사용해야 작동한다.
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

좀 찾아보니 h2 database를 사용했기 떄문에 h2 driver와  db dialect는 H2로 사용하는게 맞다는데 그렇다면 이전에는 어떻게 해결한것인가?

h2dialect와 mysqldialect 라는 검색어로 찾아보니 자세하게 나와있습니다. '우연히' 버전이 맞았던 것인것같습니다.
내가 만약에 Mysql 로 데이터베이스를 사용한다면 당연히 mysqldialect를 사용하는것이고,
h2 데이터베이스이기에 h2dialect로 사용해야 자동으로 h2 데이터베이스에 맞는 query로 실행하는것입니다.
아래 글에서도 어디서 막 설정파일을 가져오면 안된다고 말하고있습니다.
[https://2dongdong.tistory.com/66]




--------------------------

아무리 찾아봐도 오류를 못찾았었다.
처음에 import org.junit.Test.*; 로 되어있을때는 오류가 매우 간단하게 나왓었다. 아래처럼
java.lang.NullPointerException: Cannot invoke "Object.getClass()" 아무리해도 해당 오류가 났었고

jupiter로 바꾸자 로그가 매우 디테일해졌고,
import org.junit.jupiter.api.Test;
Unable to resolve name [org.hibernate.dialect.MySQL5InnoDBDialect] as strategy [org.hibernate.dialect.Dialect] 오류가나왔다.
내가 까먹은것은 테스트를 할때도 application.properties가 존재한다는점이다... ㄷㄷ..
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect 와 같이 변경해주었다.

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect XXXXXXXXXXX



----------------------------------------
H2 DataBAse에서 Maria DB로 migration 함. H2 사용할떄 남겨둔 설정파일

[C:\Users\user\IdeaProjects\room_reservation\src\main\resources\application.properties]
spring.profiles.include = oauth

#Show Sql, Table Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#localhost:8080/h2-console
#spring.h2.console.enabled=true
#spring.h2.hikari.jdbc-url=jdbc:h2:mem:testdb;MODE=MYSQL
#spring.datasource.url=jdbc:h2:mem:testdb

#jdbc
spring.session.store-type=jdbc

#FileUpload By Servlet 3.0
spring.servlet.multipart.enabled = true
spring.servlet.multipart.location = C:\\upload
spring.servlet.multipart.max-request-size = 30MB
spring.servlet.multipart.max-file-size = 10MB
com.room.reservation.upload.path = C:\\upload

#Front Templates
spring.mustache.expose-session-attributes=true
spring.thymeleaf.cache=false

# 정적 리소스에 변화가 있을 때 바로 반영한다.
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true
# thymeleaf 참조 경로
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

logging.level.org.springframework.security=trace
logging.level.com.room.reservation=debug




#spring.jpa.defer-datasource-initialization=true
#spring.sql.init.data-locations=classpath:/data_notuse.sql;   //데이터 관련
#spring.sql.init.schema-locations=classpath:schema.sql; // 테이블 생성 관련

#ignore room



[C:\Users\user\IdeaProjects\room_reservation\src\main\resources\application-real.properties\]
spring.profiles.include=oauth,real-db
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.session.store-type=jdbc